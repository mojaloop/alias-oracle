openapi: 3.0.3
info:
  version: '1.0'
  title: ALS-Oracle API
  description: Interface for interaction between a Mojaloop Switch's Account Lookup Service (ALS) and an Oracle Registry Service
  contact: {}
paths:
  /health:
    get:
      tags:
        - health
      responses:
        '200':
          $ref: '#/components/responses/ResponseHealth200'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '406':
          $ref: '#/components/responses/406'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
      operationId: HealthGet
      summary: Get server health
      description: The HTTP request GET /health is used to return the current status of the API.
  /participants/{Type}/{ID}:
    parameters:
      - $ref: '#/components/parameters/Type'
      - $ref: '#/components/parameters/ID'
      - $ref: '#/components/parameters/Content-Type'
      - $ref: '#/components/parameters/Date'
      - $ref: '#/components/parameters/X-Forwarded-For'
      - $ref: '#/components/parameters/FSPIOP-Source'
      - $ref: '#/components/parameters/FSPIOP-Destination-Optional'
      - $ref: '#/components/parameters/FSPIOP-Encryption'
      - $ref: '#/components/parameters/FSPIOP-Signature'
      - $ref: '#/components/parameters/FSPIOP-URI'
      - $ref: '#/components/parameters/FSPIOP-HTTP-Method'
    post:
      description: 'The HTTP request `POST /participants/ALIAS/{ID}` is used to record alias information for a participant (that is, an FSP or DFSP) regarding the alias defined in the `{ID}` parameter. '
      summary: Create alias information for participant
      tags:
        - participants
      operationId: ParticipantsByTypeAndIDPost
      parameters:
        - $ref: '#/components/parameters/Type'
        - $ref: '#/components/parameters/aliasId'
        - $ref: '#/components/parameters/Accept-Optional'
#        - $ref: '#/components/parameters/Content-Length'
      requestBody:
        description: Alias information to be created.
        required: true
        content:
          application/json:
            schema:
              title: ParticipantsTypeIDSubIDPostRequest
              type: object
              description: The object sent in the POST /participants/ALIAS/{ID} requests.
              properties:
                fspId:
                  $ref: '#/components/schemas/FspId'
                currency:
                  $ref: '#/components/schemas/Currency'
                extensionList:
                  $ref: '#/components/schemas/ExtensionList'
              required:
                - fspId
                - currency
                - extensionList
      responses:
        '200':
          $ref: '#/components/responses/ParticipantsTypeIdPostResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '406':
          $ref: '#/components/responses/406'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    get:
      description: 'The HTTP request `GET /participants/{Type}/{ID}` is used to find out in which FSP the requested Party, defined by `{Type}`, `{ID}`, is located (for example, `GET /participants/MSISDN/123456789`).'
      summary: Look up participant information
      tags:
        - participants
      operationId: ParticipantsByTypeAndIDGet
      parameters:
        - $ref: '#/components/parameters/Type'
        - $ref: '#/components/parameters/ID'
        - $ref: '#/components/parameters/Accept'
      responses:
        '200':
          $ref: '#/components/responses/ParticipantsTypeIDGetResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '406':
          $ref: '#/components/responses/406'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
tags:
  - name: participants
    description: ''
servers:
  - url: /
components:
  schemas:

    FspId:
      title: FspId
      type: string
      minLength: 1
      maxLength: 32
      description: FSP identifier assigned to the participant when onboarding to the Switch.
      example: 1234
    Currency:
      title: Currency
      description: |
        The currency codes defined in
        [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html)
        as three-letter alphabetic codes are used as the standard naming representation for currencies.
      type: string
      minLength: 3
      maxLength: 3
      enum:
        - AED
        - AFN
        - ALL
        - AMD
        - ANG
        - AOA
        - ARS
        - AUD
        - AWG
        - AZN
        - BAM
        - BBD
        - BDT
        - BGN
        - BHD
        - BIF
        - BMD
        - BND
        - BOB
        - BRL
        - BSD
        - BTN
        - BWP
        - BYN
        - BZD
        - CAD
        - CDF
        - CHF
        - CLP
        - CNY
        - COP
        - CRC
        - CUC
        - CUP
        - CVE
        - CZK
        - DJF
        - DKK
        - DOP
        - DZD
        - EGP
        - ERN
        - ETB
        - EUR
        - FJD
        - FKP
        - GBP
        - GEL
        - GGP
        - GHS
        - GIP
        - GMD
        - GNF
        - GTQ
        - GYD
        - HKD
        - HNL
        - HRK
        - HTG
        - HUF
        - IDR
        - ILS
        - IMP
        - INR
        - IQD
        - IRR
        - ISK
        - JEP
        - JMD
        - JOD
        - JPY
        - KES
        - KGS
        - KHR
        - KMF
        - KPW
        - KRW
        - KWD
        - KYD
        - KZT
        - LAK
        - LBP
        - LKR
        - LRD
        - LSL
        - LYD
        - MAD
        - MDL
        - MGA
        - MKD
        - MMK
        - MNT
        - MOP
        - MRO
        - MUR
        - MVR
        - MWK
        - MXN
        - MYR
        - MZN
        - NAD
        - NGN
        - NIO
        - NOK
        - NPR
        - NZD
        - OMR
        - PAB
        - PEN
        - PGK
        - PHP
        - PKR
        - PLN
        - PYG
        - QAR
        - RON
        - RSD
        - RUB
        - RWF
        - SAR
        - SBD
        - SCR
        - SDG
        - SEK
        - SGD
        - SHP
        - SLL
        - SOS
        - SPL
        - SRD
        - STD
        - SVC
        - SYP
        - SZL
        - THB
        - TJS
        - TMT
        - TND
        - TOP
        - TRY
        - TTD
        - TVD
        - TWD
        - TZS
        - UAH
        - UGX
        - USD
        - UYU
        - UZS
        - VEF
        - VND
        - VUV
        - WST
        - XAF
        - XCD
        - XDR
        - XOF
        - XPF
        - YER
        - ZAR
        - ZMW
        - ZWD
      example: MMK
    ExtensionList:
      title: ExtensionList
      type: object
      description: |
        Data model for the complex type ExtensionList.
        An optional list of extensions, specific to deployment.
      properties:
        extension:
          type: array
          items:
            title: Extension
            type: object
            description: Data model for the complex type Extension.
            properties:
              key:
                title: ExtensionKey
                type: string
                minLength: 1
                maxLength: 32
                description: Extension key.
              value:
                title: ExtensionValue
                type: string
                minLength: 1
                maxLength: 128
                description: Extension value.
            required:
              - key
              - value
          minItems: 1
          maxItems: 16
          description: Number of Extension elements.
      required:
        - extension
    Status:
      title: Status
      description: Data model for the API status.
      type: object
      additionalProperties: false
      properties:
        status:
          description: The return status, usually "OK".
          type: string
        uptime:
          description: The amount of time in seconds that the server has been up for.
          type: number
        startTime:
          description: The UTC time when the server started up.
          type: string
        versionNumber:
          description: Current version of the API.
          type: string
        services:
          description: A list of the statuses of services that the API requires.
          type: array
          items: {}

    ResponseBodyError:
      title: ErrorInformationResponse
      type: object
      description: Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses.
      properties:
        errorInformation:
          title: ErrorInformation
          type: object
          description: Data model for the complex type ErrorInformation.
          properties:
            errorCode:
              title: ErrorCode
              type: string
              pattern: '^[1-9]\d{3}$'
              description: |
                The API data type ErrorCode is a JSON String of four characters,
                consisting of digits only. Negative numbers are not allowed.
                A leading zero is not allowed. Each error code in the API is a
                four-digit number, for example, 1234, where the first number
                (1 in the example) represents the high-level error category,
                the second number (2 in the example) represents the low-level error category,
                and the last two numbers (34 in the example) represent the specific error.
              example: 5100
            errorDescription:
              title: ErrorDescription
              type: string
              minLength: 1
              maxLength: 128
              description: Error description string.
              example: This is an error description.
            extensionList:
              $ref: '#/components/schemas/ExtensionList'
          required:
            - errorCode
            - errorDescription
    ParticipantsTypeIdPost:
      title: ParticipantsTypeIdPost
      description: OK
      type: object
      properties:
        id:
          type: number
        fspId:
          $ref: '#/components/schemas/FspId'
        currency:
          $ref: '#/components/schemas/Currency'
        extensionList:
          $ref: '#/components/schemas/ExtensionList'
    ParticipantsTypeIDGet:
      title: ParticipantsTypeIDGet
      description: OK
      type: object
      properties:
        partyList:
          description: List of PartyTypeIdInfo elements that were either created or failed to be created.
          type: array
          items:
            $ref: '#/components/schemas/PartyTypeIdInfo'
    PartyTypeIdInfo:
      title: PartyTypeIdInfo
      description: Data model for the complex type PartyIdInfo.
      type: object
      properties:
        fspId:
          description: FSP ID
          type: string
        currency:
          description: Indicate that the provided currency was set to be supported by each successfully added PartyIdInfo.
          type: string
        partySubIdOrType:
          description: A sub-identifier or sub-type for the Party.
          type: string
      required:
        - fspId
        - currency

  headers:
    Content-Length:
      schema:
        type: integer
      description: |
        The `Content-Length` header field indicates the anticipated size of the payload body.
        Only sent if there is a body.
        **Note:** The API supports a maximum size of 5242880 bytes (5 Megabytes).
    Content-Type:
      schema:
        type: string
      description: |
        The `Content-Type` header indicates the specific version of the API used to
        send the payload body.

  parameters:
    Accept:
      name: Accept
      in: header
      description: The Accept header field indicates the version of the API the client
        would like the server to use.
      required: true
      schema:
        type: string
    Accept-Optional:
      name: Accept
      in: header
      description: The Accept header field indicates the version of the API the client
        would like the server to use.
      schema:
        type: string
    Content-Length:
      name: Content-Length
      in: header
      required: false
      schema:
        type: integer
      description: |
        The `Content-Length` header field indicates the anticipated size of the
        payload body. Only sent if there is a body.
        **Note:** The API supports a maximum size of 5242880 bytes (5 Megabytes).
    Type:
      name: Type
      in: path
      required: true
      schema:
        type: string
        enum:
          - MSISDN
          - EMAIL
          - PERSONAL_ID
          - BUSINESS
          - DEVICE
          - ACCOUNT_ID
          - IBAN
          - ALIAS
      description: 'The type of the party identifier. For example, `ALIAS`, `MSISDN`, `ACCOUNT_ID`.'
    ID:
      name: ID
      in: path
      required: true
      schema:
        type: string
        minLength: 1
        maxLength: 128
        description: Party identifier.
      description: The party identifier value.
    aliasId:
      name: ID
      in: path
      required: true
      schema:
        type: string
        minLength: 1
        maxLength: 128
        description: Alias identifier
      description: The unique alias identifier value.
    Content-Type:
      name: Content-Type
      in: header
      schema:
        type: string
      required: true
      description: |
        The `Content-Type` header indicates the specific version of the API used
        to send the payload body.
    Date:
      name: Date
      in: header
      schema:
        type: string
      required: true
      description: The `Date` header field indicates the date when the request was sent.
    X-Forwarded-For:
      name: X-Forwarded-For
      in: header
      schema:
        type: string
      required: false
      description: |
        The `X-Forwarded-For` header field is an unofficially accepted standard used
        for informational purposes of the originating client IP address, as a
        request might pass multiple proxies, firewalls, and so on. Multiple
        `X-Forwarded-For` values should be expected and supported by implementers
        of the API.
        **Note:** An alternative to `X-Forwarded-For` is defined in
        [RFC 7239](https://tools.ietf.org/html/rfc7239).
        However, to this point RFC 7239 is less-used and supported than `X-Forwarded-For`.
    FSPIOP-Source:
      name: FSPIOP-Source
      in: header
      schema:
        type: string
      required: true
      description: |
        The `FSPIOP-Source` header field is a non-HTTP standard field
        used by the API for identifying the sender of the HTTP request.
        The field should be set by the original sender of the request.
        Required for routing and signature verification
        (see header field `FSPIOP-Signature`).
    FSPIOP-Destination-Optional:
      name: FSPIOP-Destination-Optional
      in: header
      schema:
        type: string
      required: false
      description: |
        The `FSPIOP-Destination-Optional` header field is a non-HTTP standard field used by
        the API for HTTP header based routing of requests and responses to the
        destination. The field should be set by the original sender of the request
        (if known), so that any entities between the client and the server do not
        need to parse the payload for routing purposes.
    FSPIOP-Encryption:
      name: FSPIOP-Encryption
      in: header
      schema:
        type: string
      required: false
      description: |
        The `FSPIOP-Encryption` header field is a non-HTTP standard field used by
        the API for applying end-to-end encryption of the request.
    FSPIOP-Signature:
      name: FSPIOP-Signature
      in: header
      schema:
        type: string
      required: false
      description: |
        The `FSPIOP-Signature` header field is a non-HTTP standard field used by the
        API for applying an end-to-end request signature.
    FSPIOP-URI:
      name: FSPIOP-URI
      in: header
      schema:
        type: string
      required: false
      description: |
        The `FSPIOP-URI` header field is a non-HTTP standard field used by the API
        for signature verification, should contain the service URI. Required if
        signature verification is used, for more information, see
        [the API Signature document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).
    FSPIOP-HTTP-Method:
      name: FSPIOP-HTTP-Method
      in: header
      schema:
        type: string
      required: false
      description: |
        The `FSPIOP-HTTP-Method` header field is a non-HTTP standard field used by
        the API for signature verification, should contain the service HTTP method.
        Required if signature verification is used, for more information, see
        [the API Signature document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).

  responses:
    ResponseHealth200:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Status'
    ParticipantsTypeIdPostResponse:
      description: ParticipantsTypeIdPostResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ParticipantsTypeIdPost'
    ParticipantsTypeIDGetResponse:
      description: OK
      content:
        application/json:
          schema:
            title: ParticipantsTypeIDGetResponse
            description: OK
            type: object
            properties:
              partyList:
                description: List of PartyTypeIdInfo elements that were either created or failed to be created.
                type: array
                items:
                  $ref: '#/components/schemas/PartyTypeIdInfo'
                minItems: 0
                maxItems: 10000
    '202':
      description: Accepted
    '400':
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponseBodyError'
      headers:
        Content-Length:
          $ref: '#/components/headers/Content-Length'
        Content-Type:
          $ref: '#/components/headers/Content-Type'
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponseBodyError'
      headers:
        Content-Length:
          $ref: '#/components/headers/Content-Length'
        Content-Type:
          $ref: '#/components/headers/Content-Type'
    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponseBodyError'
      headers:
        Content-Length:
          $ref: '#/components/headers/Content-Length'
        Content-Type:
          $ref: '#/components/headers/Content-Type'
    '404':
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponseBodyError'
      headers:
        Content-Length:
          $ref: '#/components/headers/Content-Length'
        Content-Type:
          $ref: '#/components/headers/Content-Type'
    '405':
      description: Method Not Allowed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponseBodyError'
      headers:
        Content-Length:
          $ref: '#/components/headers/Content-Length'
        Content-Type:
          $ref: '#/components/headers/Content-Type'
    '406':
      description: Not Acceptable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponseBodyError'
      headers:
        Content-Length:
          $ref: '#/components/headers/Content-Length'
        Content-Type:
          $ref: '#/components/headers/Content-Type'
    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponseBodyError'
      headers:
        Content-Length:
          $ref: '#/components/headers/Content-Length'
        Content-Type:
          $ref: '#/components/headers/Content-Type'
    '501':
      description: Not Implemented
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponseBodyError'
      headers:
        Content-Length:
          $ref: '#/components/headers/Content-Length'
        Content-Type:
          $ref: '#/components/headers/Content-Type'
    '503':
      description: Service Unavailable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponseBodyError'
      headers:
        Content-Length:
          $ref: '#/components/headers/Content-Length'
        Content-Type:
          $ref: '#/components/headers/Content-Type'
